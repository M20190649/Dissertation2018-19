@article{GarciaOya2018,
abstract = {{\textless}p{\textgreater}This paper presents a system with location functionalities for the inventory of traffic signs based on passive RFID technology. The proposed system simplifies the current video-based techniques, whose requirements regarding visibility are difficult to meet in some scenarios, such as dense urban areas. In addition, the system can be easily extended to consider any other street facilities, such as dumpsters or traffic lights. Furthermore, the system can perform the inventory process at night and at a vehicle's usual speed, thus avoiding interfering with the normal traffic flow of the road. Moreover, the proposed system exploits the benefits of the passive RFID technologies over active RFID, which are typically employed on inventory and vehicular routing applications. Since the performance of passive RFID is not obvious for the required distance ranges on these in-motion scenarios, this paper, as its main contribution, addresses the problem in two different ways, on the one hand theoretically, presenting a radio wave propagation model at theoretical and simulation level for these scenarios; and on the other hand experimentally, comparing passive and active RFID alternatives regarding costs, power consumption, distance ranges, collision problems, and ease of reconfiguration. Finally, the performance of the proposed on-board system is experimentally validated, testing its capabilities for inventory purposes.{\textless}/p{\textgreater}},
author = {{Garc{\'{i}}a Oya}, Jos{\'{e}} and {Mart{\'{i}}n Clemente}, Rub{\'{e}}n and {Hidalgo Fort}, Eduardo and {Gonz{\'{a}}lez Carvajal}, Ram{\'{o}}n and {Mu{\~{n}}oz Chavero}, Fernando},
doi = {10.3390/s18072385},
file = {:C$\backslash$:/Users/40203/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Garc{\'{i}}a Oya et al. - 2018 - Passive RFID-Based Inventory of Traffic Signs on Roads and Urban Environments(2).pdf:pdf},
issn = {1424-8220},
journal = {Sensors},
keywords = {infrastructure-to-vehicle,inventory,location systems,radio propagation,rfid,signs,traffic,urban environment},
number = {7},
pages = {2385},
title = {{Passive RFID-Based Inventory of Traffic Signs on Roads and Urban Environments}},
howpublished =  {\url{http://www.mdpi.com/1424-8220/18/7/2385}},
volume = {18},
year = {2018}
},

@techreport{Swami,
abstract = {As per the growing demands of wireless communication there is enormous new technologies participating to make sophisticated environment for an end user. In a recent survey of International Telecommunication Union (ITU) it was found that the number of mobile phone subscribers has exceeds seven billion subscriptions at the end of 2014 using more than 10 to 15 internet utility apps which is more than the entire population of planet. To serve this increasing number and size of wireless communication system the German physicist-Harald Haas proposed a "Li-Fi technology" which he calls "Data through illumination" or "D-Light". Li-Fi is a new approach of VLC which has much more similar working of a OFC communication system providing data rates of ten's of Gbps. In this technology data is interpreted by the LED's ON/OFF concepts. This paper gives a brief focus on Li-Fi technology, it's working principal, some misconceptions about Li-Fi and related researches like Nobel Prize winning Blue Light emitting diode, Optoelectronic integrated circuit (OEIC) receiver, etc.},
author = {Swami, Nitin Vijaykumar},
booktitle = {IJRET: International Journal of Research in Engineering and Technology},
file = {:C$\backslash$:/Users/40203/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Swami - Unknown - Li-Fi (LIGHT FIDELITY)-THE CHANGING SCENARIO OF WIRELESS COMMUNICATION.pdf:pdf},
keywords = {AP,Li-Fi,OEIC receiver,VLC,Visible light communication,optoelectronic integrated circuit,photo detector},
pages = {2321--7308},
title = {{Li-Fi (LIGHT FIDELITY)-THE CHANGING SCENARIO OF WIRELESS COMMUNICATION}},
howpublished = {\url{http://www.ijret.org}}
},

@article{DAndrea2017,
abstract = {This paper presents an expert system for detecting traffic congestion and incidents from real-time GPS data collected from GPS trackers or drivers' smartphones. First, GPS traces are pre-processed and placed in the road map. Then, the system assigns to each road segment of the map a traffic state based on the speeds of the vehicles. Finally, it sends to the users traffic alerts based on a spatiotemporal analysis of the classified segments. Each traffic alert contains the affected area, a traffic state (e.g., incident, slowed traffic, blocked traffic), and the estimated velocity of vehicles in the area. The proposed system is intended to be a valuable support tool in traffic management for municipalities and citizens. The information produced by the system can be successfully employed to adopt actions for improving the city mobility, e.g., regulate vehicular traffic, or can be exploited by the users, who may spontaneously decide to modify their path in order to avoid the traffic jam. The elaboration performed by the expert system is independent of the context (urban o non-urban) and may be directly employed in several city road networks with almost no change of the system parameters, and without the need for a learning process or historical data. The experimental analysis was performed using a combination of simulated GPS data and real GPS data from the city of Pisa. The results on incidents show a detection rate of 91.6{\%}, and an average detection time lower than 7Â min. Regarding congestion, we show how the system is able to recognize different levels of congestion depending on different road use.},
author = {D'Andrea, Eleonora and Marcelloni, Francesco},
doi = {10.1016/j.eswa.2016.12.018},
issn = {09574174},
journal = {Expert Systems with Applications},
keywords = {Expert systems,GPS,Incident detection,Traffic congestion detection,Urban mobility simulation},
month = {may},
pages = {43--56},
publisher = {Pergamon},
title = {{Detection of traffic congestion and incidents from GPS trace analysis}},
howpublished = {\url{https://www.sciencedirect.com/science/article/pii/S0957417416306935}},
volume = {73},
year = {2017}
},

@article{Zheng2018,
abstract = {With the explosive growth of vehicles on the road, traffic congestion has become an inevitable problem when applying guidance algorithms to transportation networks in a busy and crowded city. In our study, the authors proposed an advanced prediction and navigation models on a dynamic traffic network. In contrast to the traditional shortest path algorithms, focused on the static network, the first part of our guiding method considered the potential traffic jams and was developed to provide the optimal driving advice for the distinct periods of a day. Accordingly, by dividing the real-time Global Positioning System data of taxis in Shenzhen city into 50 regions, the equilibrium Markov chain model was designed for dispatching vehicles and applied to ease the city congestion. With the reveals of our field experiments, the traffic congestion of city traffic networks can be alleviated effectively and efficiently, the system performance also can be retained.},
author = {Zheng, Yan and Li, Yanran and Own, Chung-Ming and Meng, Zhaopeng and Gao, Mengya},
doi = {10.1177/1550147718769784},
file = {:C$\backslash$:/Users/40203/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Zheng et al. - 2018 - Real-time predication and navigation on traffic congestion model with equilibrium Markov chain.pdf:pdf},
journal = {Special Collection Article International Journal of Distributed Sensor Networks},
keywords = {Intelligent transportation system,Markov chain,collaborative driving,navigation algorithm,traffic congestion},
number = {4},
pages = {2018},
title = {{Real-time predication and navigation on traffic congestion model with equilibrium Markov chain}},
howpublished = {\url{http://www.uk.sagepub.com/aboutus/}},
volume = {14},
year = {2018}
},

@article{Liu,
abstract = {It is a pressing task to estimate the real-time travel time on road networks reliably in big cities, even though floating car data has been widely used to reflect the real traffic. Currently floating car data are mainly used to estimate the real-time traffic conditions on road segments, and has done little for turn delay estimation. However, turn delays on road intersections contribute significantly to the overall travel time on road networks in modern cities. In this paper, we present a technical framework to calculate the turn delays on road networks with float car data. First, the original floating car data collected with GPS equipped taxies was cleaned and matched to a street map with a distributed system based on Hadoop and MongoDB. Secondly, the refined trajectory data set was distributed among 96 time intervals (from 0: 00 to 23: 59). All of the intersections where the trajectories passed were connected with the trajectory segments, and constituted an experiment sample, while the intersections on arterial streets were specially selected to form another experiment sample. Thirdly, a principal curve-based algorithm was presented to estimate the turn delays at the given intersections. The algorithm argued is not only statistically fitted the real traffic conditions, but also is insensitive to data sparseness and missing data problems, which currently are almost inevitable with the widely used floating car data collecting technology. We adopted the floating car data collected from March to June in Beijing city in 2011, which contains more than 2.6 million trajectories generated from about 20000 GPS-equipped taxicabs and accounts for about 600 GB in data volume. The result shows the principal curve based algorithm we presented takes precedence over traditional methods, such as mean and median based approaches, and holds a higher estimation accuracy (about 10{\%}-15{\%} higher in RMSE), as well as reflecting the changing trend of traffic congestion. With the estimation result for the travel delay at intersections, we analyzed the spatio-temporal distribution of turn delays in three time scenarios (0: 00-0: 15, 8: 15-8: 30 and 12: 00-12: 15). It indicates that during one's single trip in Beijing, average 60{\%} of the travel time on the road networks is wasted on the intersections, and this situation is even worse in daytime. Although the 400 main intersections take only 2.7{\%} of all the intersections, they occupy about 18{\%} travel time.},
author = {Liu, Xiliang and Lu, Feng and Zhang, Hengcai and Qiu, Peiyuan},
doi = {10.1007/s11707-012-0350-y},
file = {:C$\backslash$:/Users/40203/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Liu et al. - Unknown - Intersection delay estimation from floating car data via principal curves a case study on Beijing's road network.pdf:pdf},
year = {2012},
keywords = {float car data,intersection delay,principal curves,trajectory},
title = {{Intersection delay estimation from floating car data via principal curves: a case study on Beijing's road network}},
howpublished = {\url{https://link-springer-com.ezproxy.napier.ac.uk/content/pdf/10.1007{\%}2Fs11707-012-0350-y.pdf}}
},

@techreport{Jia,
abstract = {In recent years, the widespread of GPS devices produce huge amount of urban trajectories. Due to the complex structure of road network in urban area, many issues are not addressed in existing work, such as high volume of road network, diverse functionalities of roads, and high variance of road dynamics. In this paper, we propose a novel modularity-based map-matching algorithm called Urban Map-Matching (UrbMatch) utilizing urban GPS trajectories. UrbMatch considers (1) the spatial-temporal betweenness and (2) the marginal velocity of each road segment, to improve the accuracy of map-matching. Based on the results of spatial-temporal mining, a road network is decomposed into several sub-networks such that the map-matching task can be divided into several smaller sub-tasks and run in parallel. Accordingly, the running time can be reduced. We compare UrbMatch with an existing global map-matching algorithm using real-world dataset. The results show that our proposed approach not only are faster than state-of-the-art global map-matching method over 100 times but also outperforms other map matching techniques in terms of accuracy.},
author = {Jia, Josh and Ying, Ching and Shi, Bo-Nian and Lan, Kun-Chan and Tseng, Vincent S},
file = {:C$\backslash$:/Users/40203/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Jia et al. - Unknown - Spatial-temporal Mining for Urban Map-Matching.pdf:pdf},
year={2014},
keywords = {Centrality Mining,H28 [Database Management]: Database Applications-D,Road Network Analysis,Trajectory Analysis},
title = {{Spatial-temporal Mining for Urban Map-Matching}},
howpublished = {\url{https://support.google.com/maps/answer/2549020?hl=en}}
},
@article{Dijkstra1959,
abstract = {We consider n points (nodes), some or all pairs of which are connected by a branch; the length of each branch is given. We restrict ourselves to the case where at least one path exists between any two nodes. We now consider two problems. Problem 1. Constrnct the tree of minimum total length between the n nodes. (A tree is a graph with one and only one path between every two nodes.) In the course of the construction that we present here, the branches are subdivided into three sets: I. the branches definitely assignec{\~{}} to the tree under construction (they will form a subtree) ; II. the branches from which the next branch to be added to set I, will be selected ; III. the remaining branches (rejected or not yet considered). The nodes are subdivided into two sets: A. the nodes connected by the branches of set I, B. the remaining nodes (one and only one branch of set II will lead to each of these nodes), We start the construction by choosing an arbitrary node as the only member of set A, and by placing all branches that end in this node in set II. To start with, set I is empty. From then onwards we perform the following two steps repeatedly. Step 1. The shortest branch of set II is removed from this set and added to},
author = {Dijkstra, E. W.},
doi = {10.1007/BF01386390},
file = {:C$\backslash$:/Users/40203/Downloads/dijkstra1959.pdf:pdf},
isbn = {0029-599X (Print) 0945-3245 (Online)},
issn = {0029599X},
journal = {Numerische Mathematik},
number = {1},
pages = {269--271},
pmid = {18215627},
title = {{A note on two problems in connexion with graphs}},
volume = {1},
year = {1959}
},
@book{Svennerberg2010,
abstract = {This book is about the next generation of the Google Maps API. It will provide the reader with the skills and knowledge necessary to incorporate Google Maps version 3 on web pages in both desktop and mobile browsers. It also describes how to deal with common problems that most map developers encounter at some point, like performance and usability issues with having too many markers and possible solutions to that. Introduction to the Google Maps API version 3 Solutions to common problems most developers encounters (too many markers, common JavaScript pitfalls) Best practices using HTML/CSS/JavaScript and Google Maps. Introducing the Google Maps API -- Transferring from Version 2 to 3 -- Creating Your First Map -- Taking the Map Further with MapOptions -- X Marks the Spot -- Marker Icons -- InfoWindow Tips and Tricks -- Creating Polylines and Polygons -- Dealing with Massive Numbers of Markers -- Location, Location, Location.},
author = {Svennerberg, Gabriel.},
isbn = {1430228032},
pages = {310},
publisher = {Apress},
title = {{Beginning Google Maps API 3}},
howpublished = {\url{https://books.google.co.uk/books?hl=en{\&}lr={\&}id=FaoqmUoJRDcC{\&}oi=fnd{\&}pg=PR1{\&}dq=google+maps+history{\&}ots=kWZiha{\_}KfX{\&}sig=ulLWF8o2lq7haLOyNl4QmwDUkl0{\#}v=onepage{\&}q=google maps history{\&}f=false}},
year = {2010}
},
@misc{googleElevation,
title = {{Elevation Service Â |Â  Maps JavaScript API Â |Â  Google Developers}},
author={Google},
year={2019},
howpublished = {\url{https://developers.google.com/maps/documentation/javascript/elevation}},
urldate = {2018-11-18}
},
@misc{TomTomHist,
title = {{History | TomTom}},
author = {TomTom},
year={2019},
howpublished = {\url{https://corporate.tomtom.com/company/our-company/history}},
urldate = {2018-11-21}
},
@misc{TomTomLayers,
title = {{Static Image | Maps API Documentation, Raster | Maps API | TomTom Developer Portal}},
author = {TomTom},
year = {2019},
howpublished = {\url{https://developer.tomtom.com/maps-api/maps-api-documentation-raster/static-image}},
urldate = {2018-11-22}
},
@misc{OpenWiki,
title = {{OpenStreetMap Wiki}},
howpublished = {\url{https://wiki.openstreetmap.org/wiki/Main{\_}Page}},
author = {OpenStreetMap},
year= {2019},
urldate = {2019-03-24}
},
@misc{SpeedvsTime,
title = {{Measurement of Speed and Distance Time graph: Methods to plot {\&} videos}},
author= {Toppr},
year={2019},
howpublished = {\url{https://www.toppr.com/guides/science/motion-and-time/measurement-of-speed-and-distance-time-graph/}},
urldate = {2019-03-25}
},
@misc{TomTomMyDrive,
title = {{TomTom MyDrive}},
howpublished = {\url{https://mydrive.tomtom.com/en{\_}gb/{\#}mode=search+viewport=55.93565,-3.17616,16,17,-110.4}},
author = {TomTom},
year = {2019},
urldate = {2019-03-25}
},
@techreport{nationalSurvey,
	file = {:C$\backslash$:/Users/Dylan/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Unknown - 2018 - 2017 National Travel Survey(2).pdf:pdf},
	title = {{2017 National Travel Survey}},
	author = {Evans, Adam and Cummings, John and Slocombe, Matthew and Corvaglia, Francesca},
	howpublished = {\url{https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment{\_}data/file/729521/national-travel-survey-2017.pdf}},
	year = {2017}
},
@techreport{Mathew2007,
	abstract = {The success of transportation engineering depends upon the coordination between the three primary elements, namely the vehicles, the roadways, and the road users. Their characteristics affect the performance of the transportation system and the transportation engineer should have fairly good understanding about them. This chapter elaborated salient human, vehicle, and road factors affecting transportation. 4.2 Human factors affecting transportation Road users can be defined as drivers, passengers, pedestrians etc. who use the streets and highways. Together, they form the most complex element of the traffic system-the human element-which differentiates Transportation Engineering from all other engineering fields. It is said to be the most complex factor as the human performances varies from individual to individual. Thus, the transportation engineer should deal with a variety of road user characteristics. For example, a traffic signal timed to permit an average pedestrian to cross the street safely may cause a severe hazard to an elderly person. Thus, the design considerations should safely and efficiently accommodate the elderly persons, the children, the handicapped, the slow and speedy, and the good and bad drivers. 4.2.1 Variability The most complex problem while dealing human characteristics is its variability. The human characteristics like ability to react to a situation, vision and hearing, and other physical and psychological factors vary from person to person and depends on age, fatigue, nature of stimuli, presence of drugs/alcohol etc. The influence of all these factors and the corresponding variability cannot be accounted when a facility is designed. So a standardized value is often used as the design value. The 85 th percentile value of different characteristics is taken as a standard. It represents a characteristic that 85 per percent of the population can meet or exceed. For example. if we say that the 85 th percentile value of walking speed is about 2 m/s, it means that 85 per cent of people has walking speed faster than 2 m/s. The variability is thus fixed by selecting proper 85th percentile values of the characteristics. Introduction to Transportation Engineering 4.1 The road user characteristics can be of two main types, some of them are quantifiable like reaction time, visual acuity etc. while some others are less quantifiable like the psychological factors, physical strength, fatigue, and dexterity. 4.2.3 Reaction time The road user is subjected to a series of stimuli both expected and unexpected. The time taken to perform an action according to the stimulus involves a series of stages like: â¢ Perception: Perception is the process of perceiving the sensations received through the sense organs, nerves and brains. It is actually the recognitions that a stimulus on which a reaction is to happen exists. â¢ Intellection: Intellection involves the identification and understanding of stimuli. â¢ Emotion: This stage involves the judgment of the appropriate response to be made on the stimuli like to stop, pass, move laterally etc. â¢ Volition: Volition is the execution of the decision which is the result of a physical actions of the driver. For example., if a driver approaches an intersection where the signal is red, the driver first sees the signal (perception), he recognizes that is is a red/STOP signal, he decides to stop and finally applies the brake(volition). This sequence is called the PIEV time or perception-reaction time. But apart from the above time, the vehicle itself traveling at initial speed would require some more time to stop. That is, the vehicle traveling with initial speed u will travel for a distance, d = vt where, t is the above said PIEV time. Again, the vehicle would travel some distance after the brake is applied. 4.2.4 Visual acuity and driving The perception-reaction time depends greatly on the effectiveness of drivers vision in perceiving the objects and traffic control measures. The PIEV time will be decreased if the vision is clear and accurate. Visual acuity relates to the field of clearest vision. The most acute vision is within a cone of 3 to 5 degrees, fairly clear vision within 10 to 12 degrees and the peripheral vision will be within 120 to 180 degrees. This is important when traffic signs and signals are placed, but other factors like dynamic visual acuity, depth perception etc. should also be considered for accurate design. Glare vision and color vision are also equally important. Glare vision is greatly affected by age. Glare recovery time is the time required to recover from the effect of glare after the light source is passed, and will be higher for elderly persons. Color vision is important as it can come into picture in case of sign and signal recognition. 4.2.5 Walking Transportation planning and design will not be complete if the discussion is limited to drivers and vehicular passengers. The most prevalent of the road users are the pedestrians. Pedestrian traffic along footpaths, sidewalks, crosswalks, safety zones, islands, and over and under passes should be considered. On an average, the pedestrian walking speed can be taken between 1.5 m/sec to 2 m/sec. But the influence of physical, mental, and emotional factors need to be considered. Parking spaces and facilities like signals, bus stops, and over and under passes are to be located and designed according to the maximum distance to which a user will be willing Introduction to Transportation Engineering 4.2},
	author = {Mathew, Tom V and Rao, Krishna},
	file = {:C$\backslash$:/Users/Dylan/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Mathew, Rao - 2007 - Factors affecting transportation 4.1 Overview 4.2.2 Critical characteristics.pdf:pdf},
	title = {{Factors affecting transportation 4.1 Overview 4.2.2 Critical characteristics}},
	howpublished = {\url{https://nptel.ac.in/courses/105101087/downloads/Lec-4.pdf}},
	year = {2007}
},
@misc{TomTomMapAPI,
	title = {{Map | Maps SDK for Android | TomTom Developer Portal}},
	howpublished = {\url{https://developer.tomtom.com/maps-android-sdk/map}},
	author = {TomTom},
	year = {2019},
	urldate = {2019-03-29}
},
@misc{TomTomIQ,
	title = {{About IQ Routes}},
	howpublished = {\url{http://uk.support.tomtom.com/app/answers/detail/a{\_}id/9552/{~}/about-iq-routes}},
	author = {TomTom},
	year = {2019},
	urldate = {2019-04-01}
},
@misc{TomTomTut,
	title = {{Search along a route | Android Tutorials, Use Cases | Maps SDK for Android | TomTom Developer Portal}},
	howpublished = {\url{https://developer.tomtom.com/maps-sdk-android/android-tutorials-use-cases/search-along-route}},
	author = {TomTom},
	year = {2019},
	urldate = {2019-04-01}
}, @misc{Haversine,
title = {{Calculate distance and bearing between two Latitude/Longitude points using haversine formula in JavaScript}},
author = {Veness, Chris},
year = {2002},
howpublished = {\url{https://www.movable-type.co.uk/scripts/latlong.html}},
note = {2019-04-01}
},	
},@misc{GoogleLocation,
title = {{Location Â |Â  Android Developers}},
howpublished = {\url{https://developer.android.com/reference/android/location/Location}},
author = {Android},
year = {2019},
urldate = {2019-04-01}
},

 @misc{trendsInnavigation,
title = {{The Popularity of Google Maps: Trends in Navigation Apps in 2018 | The Manifest}},
author = {Panko, Riley},
year = {2018},
howpublished = {\url{https://themanifest.com/app-development/popularity-google-maps-trends-navigation-apps-2018}},
urldate = {2019-04-02}
},
@misc{Trivedi2019,
	author = {Trivedi, Utkarsh},
	title = {{Dijkstra's shortest path algorithm using set in STL - GeeksforGeeks}},
	howpublished = {\url{https://www.geeksforgeeks.org/dijkstras-shortest-path-algorithm-using-set-in-stl/}},
	urldate = {2019-04-02},
	year = {2019}
},














